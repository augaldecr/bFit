@model bFit.Web.Models.SetViewModel


@{
    ViewData["Title"] = "Editar circuito";
    ViewData["EditAction"] = "EditSubSet";
    Model.SetId = Model.Id;
}

<partial name="Controls/_Header" />

<div class="row">
    <div class="col-md-12">

        <div class="card">
            <div class="card-header">
                <form asp-action="EditSet">

                    <partial name="_SubSet" />

                    <div class="form-row">
                        <div class="form-group">
                            <input type="submit" value="Guardar" class="btn btn-primary" />
                            <a class="btn btn-light" asp-action="EditWorkout" asp-route-id="@Model.WorkoutId">
                                Volver al listado
                                <svg class="bi bi-arrow-left" width="1em" height="1em" viewBox="0 0 20 20" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M7.854 6.646a.5.5 0 010 .708L5.207 10l2.647 2.646a.5.5 0 01-.708.708l-3-3a.5.5 0 010-.708l3-3a.5.5 0 01.708 0z" clip-rule="evenodd"></path>
                                    <path fill-rule="evenodd" d="M4.5 10a.5.5 0 01.5-.5h10.5a.5.5 0 010 1H5a.5.5 0 01-.5-.5z" clip-rule="evenodd"></path>
                                </svg>
                            </a>
                        </div>
                    </div>
                </form>
            </div>
            <div class="card-body">
                @if (Model.Subsets != null)
                {
                    @foreach (var item in Model.Subsets.Select((value, i) => (value, i)))
                    {
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title">Circuito @(item.i + 1)</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-responsive-sm table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.Exercise)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.SubSetType)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.Quantity)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.PositiveTime)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.NegativeTime)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.Remarks)
                                            </th>
                                            <th>Editar</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item2 in Model.Subsets)
                                        {

                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.Exercise.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.SubSetType.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.Quantity)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.PositiveTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.NegativeTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.Remarks)
                                                </td>
                                                <td>
                                                    <partial name="Controls/_BtnEditNoText" view-data="ViewData" model="@item2" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<partial name="Controls/_Footer" />