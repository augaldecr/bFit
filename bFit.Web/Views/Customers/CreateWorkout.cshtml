@model bFit.Web.Models.WorkoutViewModel


@{
    ViewData["Title"] = "Crear rutina de entrenamiento";
    ViewData["BackAction"] = "Details";
    ViewData["EditAction"] = "EditSubSet";
    ViewData["DetailAction"] = "DetailsWorkout";
}

<partial name="Controls/_Header" />
<form asp-action="CreateWorkout">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <partial name="_Workout" />

    <div class="form-group">
        <partial name="Controls/_BtnSubmit" />
        <partial name="Controls/_BtnBackWithID" view-data="ViewData" model="@Model.Customer" />
    </div>
</form>
<partial name="Controls/_Footer" />

<div class="row">
    <div class="col-md-12">

        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Series</h5>
            </div>
            <div class="card-body">
                @if (Model.Sets == null)
                {
                    <h5>No hay sets</h5>
                }
                else
                {
                    @foreach (var item in Model.Sets.Select((value, i) => (value, i)))
                    {
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title">Serie @(item.i + 1)</h6>
                            </div>
                            <div class="card-body">
                                <table class="table table-responsive-sm table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.SubSets.FirstOrDefault().Exercise)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.SubSets.FirstOrDefault().SubSetType)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.SubSets.FirstOrDefault().Quantity)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.SubSets.FirstOrDefault().PositiveTime)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.SubSets.FirstOrDefault().NegativeTime)
                                            </th>
                                            <th class="font-weight-bolder">
                                                @Html.DisplayNameFor(modelItem => item.value.SubSets.FirstOrDefault().Remarks)
                                            </th>
                                            <th>Editar</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item2 in item.value.SubSets)
                                        {

                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.Exercise.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.SubSetType.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.Quantity)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.PositiveTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.NegativeTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item2.Remarks)
                                                </td>
                                                <td>
                                                    <partial name="Controls/_BtnEditNoText" view-data="ViewData" model="@item2" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="card-footer">
                <h5>Agregar Set de ejercicio</h5>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}